import { ConvexHttpClient } from "convex/browser";
import { readFileSync, existsSync } from 'fs';
import { join } from 'path';

console.log("üß™ Test du dashboard admin avec CMS Articles...\n");

// Lire la configuration
const envPath = join(process.cwd(), '.env');
if (!existsSync(envPath)) {
  console.log("‚ùå Fichier .env non trouv√©");
  process.exit(1);
}

const envContent = readFileSync(envPath, 'utf8');
const convexUrlMatch = envContent.match(/VITE_CONVEX_URL=(.+)/);
const convexUrl = convexUrlMatch ? convexUrlMatch[1].trim() : null;

const client = new ConvexHttpClient(convexUrl);

async function testAdminDashboard() {
  try {
    console.log("üîç Test des donn√©es du dashboard...");
    
    // Test des statistiques des r√©servations
    console.log("1Ô∏è‚É£ Test des statistiques des r√©servations...");
    const bookingStats = await client.query("bookings:getBookingStats", {});
    console.log(`‚úÖ Statistiques r√©servations : ${bookingStats.total} total, ${bookingStats.pending} en attente`);
    
    // Test des statistiques des articles
    console.log("\n2Ô∏è‚É£ Test des statistiques des articles...");
    const articleStats = await client.query("articles:getArticleStats", {});
    console.log(`‚úÖ Statistiques articles :`);
    console.log(`   - Total : ${articleStats.total}`);
    console.log(`   - Publi√©s : ${articleStats.published}`);
    console.log(`   - Brouillons : ${articleStats.draft}`);
    console.log(`   - √Ä la une : ${articleStats.featured}`);
    console.log(`   - Vues totales : ${articleStats.totalViews}`);
    console.log(`   - Cat√©gories : ${articleStats.categories}`);
    
    // Test de r√©cup√©ration des articles
    console.log("\n3Ô∏è‚É£ Test de r√©cup√©ration des articles...");
    const articles = await client.query("articles:getArticles", {});
    console.log(`‚úÖ ${articles.length} articles r√©cup√©r√©s`);
    
    // Test des cat√©gories
    console.log("\n4Ô∏è‚É£ Test des cat√©gories...");
    const categories = await client.query("articles:getArticleCategories", {});
    console.log(`‚úÖ Cat√©gories : ${categories.join(", ")}`);
    
    // Test des articles populaires
    console.log("\n5Ô∏è‚É£ Test des articles populaires...");
    const popularArticles = await client.query("articles:getPopularArticles", { limit: 3 });
    console.log(`‚úÖ ${popularArticles.length} articles populaires`);
    
    console.log("\nüéâ Tous les tests du dashboard sont pass√©s !");
    console.log("\nüìã Fonctionnalit√©s du dashboard admin :");
    console.log("   ‚úÖ Statistiques des r√©servations");
    console.log("   ‚úÖ Statistiques des articles");
    console.log("   ‚úÖ Bouton d'acc√®s rapide au CMS");
    console.log("   ‚úÖ Section d√©di√©e aux articles");
    console.log("   ‚úÖ Liens vers la gestion et l'aper√ßu");
    console.log("   ‚úÖ Compteurs en temps r√©el");
    
    console.log("\nüöÄ Le dashboard admin est pr√™t !");
    console.log("üì± Acc√©dez √† :");
    console.log("   - /admin pour voir le dashboard");
    console.log("   - /admin/articles pour g√©rer les articles");
    console.log("   - /blog pour voir le blog public");
    
  } catch (error) {
    console.error("‚ùå Erreur lors des tests :", error.message);
  }
}

testAdminDashboard();
