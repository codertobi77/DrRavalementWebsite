import { ConvexHttpClient } from "convex/browser";
import { readFileSync, existsSync } from 'fs';
import { join } from 'path';

console.log("üß™ Test des imports et de la configuration...\n");

// V√©rifier que les fichiers g√©n√©r√©s existent
const generatedFiles = [
  'convex/_generated/api.d.ts',
  'convex/_generated/api.js',
  'convex/_generated/dataModel.d.ts',
  'convex/_generated/server.d.ts',
  'convex/_generated/server.js'
];

console.log("1Ô∏è‚É£ V√©rification des fichiers g√©n√©r√©s...");
let allFilesExist = true;

for (const file of generatedFiles) {
  if (existsSync(file)) {
    console.log(`‚úÖ ${file} existe`);
  } else {
    console.log(`‚ùå ${file} manquant`);
    allFilesExist = false;
  }
}

if (!allFilesExist) {
  console.log("\n‚ùå Certains fichiers g√©n√©r√©s sont manquants");
  console.log("üí° Ex√©cutez : npx convex dev --once");
  process.exit(1);
}

// V√©rifier la configuration Convex
console.log("\n2Ô∏è‚É£ V√©rification de la configuration Convex...");
const envPath = join(process.cwd(), '.env');
if (!existsSync(envPath)) {
  console.log("‚ùå Fichier .env non trouv√©");
  process.exit(1);
}

const envContent = readFileSync(envPath, 'utf8');
const convexUrlMatch = envContent.match(/VITE_CONVEX_URL=(.+)/);
const convexUrl = convexUrlMatch ? convexUrlMatch[1].trim() : null;

if (!convexUrl || convexUrl.includes('your-convex-deployment')) {
  console.log("‚ùå URL Convex non configur√©e");
  process.exit(1);
}

console.log(`‚úÖ URL Convex : ${convexUrl}`);

// Tester la connexion
console.log("\n3Ô∏è‚É£ Test de la connexion Convex...");
const client = new ConvexHttpClient(convexUrl);

try {
  const articles = await client.query("articles:getArticles", {});
  console.log(`‚úÖ Connexion r√©ussie ! ${articles.length} articles trouv√©s`);
  
  const stats = await client.query("articles:getArticleStats", {});
  console.log(`‚úÖ Statistiques : ${stats.total} total, ${stats.published} publi√©s`);
  
} catch (error) {
  console.log(`‚ùå Erreur de connexion : ${error.message}`);
  process.exit(1);
}

console.log("\nüéâ Tous les tests sont pass√©s !");
console.log("\nüìã Configuration v√©rifi√©e :");
console.log("   ‚úÖ Fichiers g√©n√©r√©s par Convex");
console.log("   ‚úÖ Configuration .env");
console.log("   ‚úÖ Connexion Convex");
console.log("   ‚úÖ Fonctions articles disponibles");

console.log("\nüöÄ Le syst√®me est pr√™t !");
console.log("üí° Vous pouvez maintenant :");
console.log("   - D√©marrer le serveur : npm run dev");
console.log("   - Acc√©der √† /admin/articles");
console.log("   - Utiliser le CMS Articles");
