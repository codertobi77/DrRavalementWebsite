import { readFileSync, existsSync } from 'fs';

console.log("üîß Test de la correction des titres...\n");

// V√©rifier les corrections apport√©es
console.log("1Ô∏è‚É£ V√©rification des corrections...");

const editorContent = readFileSync('src/components/admin/RichTextEditor.tsx', 'utf8');

// V√©rifier que la fonction formatHeading a √©t√© ajout√©e
if (editorContent.includes('formatHeading')) {
  console.log("‚úÖ Fonction formatHeading ajout√©e");
} else {
  console.log("‚ùå Fonction formatHeading manquante");
}

// V√©rifier les d√©tails de la fonction formatHeading
const formatHeadingFeatures = [
  'createElement',
  'h1',
  'h2', 
  'h3',
  'selectedText',
  'range.deleteContents',
  'range.insertNode',
  'setStartAfter'
];

console.log("\n2Ô∏è‚É£ V√©rification de la fonction formatHeading...");
for (const feature of formatHeadingFeatures) {
  if (editorContent.includes(feature)) {
    console.log(`‚úÖ ${feature} pr√©sent`);
  } else {
    console.log(`‚ùå ${feature} manquant`);
  }
}

// V√©rifier que les boutons utilisent la nouvelle fonction
console.log("\n3Ô∏è‚É£ V√©rification des boutons de titres...");
const headingButtons = [
  'onClick={() => formatHeading(1)}',
  'onClick={() => formatHeading(2)}',
  'onClick={() => formatHeading(3)}',
  'ri-h-1',
  'ri-h-2',
  'ri-h-3'
];

for (const button of headingButtons) {
  if (editorContent.includes(button)) {
    console.log(`‚úÖ ${button} pr√©sent`);
  } else {
    console.log(`‚ùå ${button} manquant`);
  }
}

// V√©rifier que les anciens ToolButton pour les titres ont √©t√© remplac√©s
console.log("\n4Ô∏è‚É£ V√©rification du remplacement des ToolButton...");
if (editorContent.includes('ToolButton') && editorContent.includes('formatBlock') && editorContent.includes('h1')) {
  console.log("‚ö†Ô∏è  Anciens ToolButton pour les titres encore pr√©sents");
} else {
  console.log("‚úÖ Anciens ToolButton pour les titres remplac√©s");
}

// V√©rifier la structure des boutons
console.log("\n5Ô∏è‚É£ V√©rification de la structure des boutons...");
const buttonStructure = [
  'type="button"',
  'onClick={() => formatHeading',
  'className="p-2 rounded hover:bg-gray-100',
  'title="Titre'
];

for (const structure of buttonStructure) {
  if (editorContent.includes(structure)) {
    console.log(`‚úÖ ${structure} pr√©sent`);
  } else {
    console.log(`‚ùå ${structure} manquant`);
  }
}

// V√©rifier la gestion de la s√©lection
console.log("\n6Ô∏è‚É£ V√©rification de la gestion de la s√©lection...");
const selectionFeatures = [
  'window.getSelection',
  'rangeCount',
  'getRangeAt',
  'toString()',
  'removeAllRanges',
  'addRange'
];

for (const feature of selectionFeatures) {
  if (editorContent.includes(feature)) {
    console.log(`‚úÖ ${feature} pr√©sent`);
  } else {
    console.log(`‚ùå ${feature} manquant`);
  }
}

console.log("\nüéâ Test de correction des titres termin√© !");
console.log("\nüìã R√©sum√© des corrections :");
console.log("   ‚úÖ Fonction formatHeading cr√©√©e");
console.log("   ‚úÖ Gestion de la s√©lection de texte");
console.log("   ‚úÖ Cr√©ation d'√©l√©ments H1, H2, H3");
console.log("   ‚úÖ Boutons personnalis√©s pour les titres");
console.log("   ‚úÖ Remplacement du texte s√©lectionn√©");

console.log("\nüöÄ Les titres H1, H2, H3 devraient maintenant fonctionner !");
console.log("üí° Fonctionnement :");
console.log("   ‚Ä¢ S√©lectionnez du texte et cliquez sur H1/H2/H3");
console.log("   ‚Ä¢ Ou cliquez sur H1/H2/H3 sans s√©lection pour ins√©rer un titre par d√©faut");
console.log("   ‚Ä¢ Le curseur se place apr√®s le titre cr√©√©");

console.log("\nüîç Pour tester :");
console.log("   1. Red√©marrez le serveur : npm run dev");
console.log("   2. Allez sur /admin/articles");
console.log("   3. Cr√©ez un nouvel article");
console.log("   4. Tapez du texte dans l'√©diteur");
console.log("   5. S√©lectionnez du texte");
console.log("   6. Cliquez sur H1, H2, ou H3");
console.log("   7. V√©rifiez que le texte devient un titre");
console.log("   8. Sauvegardez et v√©rifiez sur /blog");

console.log("\nüí° Conseils d'utilisation :");
console.log("   ‚Ä¢ S√©lectionnez le texte avant de cliquer sur H1/H2/H3");
console.log("   ‚Ä¢ Ou cliquez sur H1/H2/H3 sans s√©lection pour cr√©er un titre vide");
console.log("   ‚Ä¢ Utilisez H1 pour les titres principaux");
console.log("   ‚Ä¢ Utilisez H2 pour les sous-titres");
console.log("   ‚Ä¢ Utilisez H3 pour les sous-sous-titres");
