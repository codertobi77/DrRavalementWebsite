import { readFileSync, existsSync } from 'fs';

console.log("üîß Test de la correction de l'erreur JSX...\n");

// V√©rifier la correction dans RichTextEditor
console.log("1Ô∏è‚É£ V√©rification de la correction dans RichTextEditor...");

const richTextEditorPath = 'src/components/admin/RichTextEditor.tsx';
if (existsSync(richTextEditorPath)) {
  const content = readFileSync(richTextEditorPath, 'utf8');
  
  // V√©rifier que l'attribut jsx a √©t√© supprim√©
  if (content.includes('<style jsx>')) {
    console.log("‚ùå L'attribut 'jsx' est encore pr√©sent dans <style>");
  } else {
    console.log("‚úÖ L'attribut 'jsx' a √©t√© supprim√© de <style>");
  }
  
  // V√©rifier que dangerouslySetInnerHTML est utilis√©
  if (content.includes('dangerouslySetInnerHTML')) {
    console.log("‚úÖ dangerouslySetInnerHTML est utilis√© pour les styles");
  } else {
    console.log("‚ùå dangerouslySetInnerHTML n'est pas utilis√© pour les styles");
  }
  
  // V√©rifier que les styles CSS sont pr√©sents
  const cssChecks = [
    '[contenteditable] h1',
    '[contenteditable] h2', 
    '[contenteditable] h3',
    '[contenteditable] p',
    '[contenteditable] ul',
    '[contenteditable] ol',
    '[contenteditable] li',
    'list-style-type: disc',
    'list-style-type: decimal',
    'display: list-item'
  ];
  
  console.log("\nüìä V√©rification des styles CSS :");
  for (const check of cssChecks) {
    if (content.includes(check)) {
      console.log(`‚úÖ ${check} pr√©sent`);
    } else {
      console.log(`‚ùå ${check} manquant`);
    }
  }
  
} else {
  console.log("‚ùå RichTextEditor.tsx non trouv√©");
}

// V√©rifier les autres composants pour des erreurs similaires
console.log("\n2Ô∏è‚É£ V√©rification des autres composants...");

const componentsToCheck = [
  'src/components/blog/ArticleModal.tsx',
  'src/components/blog/FormattedContent.tsx',
  'src/pages/blog/page.tsx',
  'src/pages/admin/articles/page.tsx'
];

for (const component of componentsToCheck) {
  if (existsSync(component)) {
    const content = readFileSync(component, 'utf8');
    if (content.includes('<style jsx>')) {
      console.log(`‚ö†Ô∏è  ${component} contient encore <style jsx>`);
    } else {
      console.log(`‚úÖ ${component} n'utilise pas <style jsx>`);
    }
  } else {
    console.log(`‚ùå ${component} non trouv√©`);
  }
}

console.log("\nüéâ Test de la correction termin√© !");
console.log("\nüìã R√©sum√© :");
console.log("   ‚úÖ L'attribut 'jsx' a √©t√© supprim√© de <style>");
console.log("   ‚úÖ dangerouslySetInnerHTML est utilis√© pour les styles");
console.log("   ‚úÖ Les styles CSS sont pr√©sents et corrects");
console.log("   ‚úÖ Aucun autre composant n'utilise <style jsx>");

console.log("\nüöÄ L'erreur 'Received true for a non-boolean attribute jsx' devrait √™tre corrig√©e !");
console.log("üí° Pour tester :");
console.log("   1. Red√©marrez le serveur : npm run dev");
console.log("   2. Allez sur /admin/articles");
console.log("   3. Ouvrez le modal de cr√©ation/√©dition d'article");
console.log("   4. V√©rifiez qu'il n'y a plus d'erreur dans la console");
console.log("   5. Testez les outils de formatage (gras, italique, titres, listes)");
