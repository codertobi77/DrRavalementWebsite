import { execSync } from 'child_process';
import { existsSync } from 'fs';
import { join } from 'path';

console.log("üöÄ Configuration du CMS Articles - DR RAVALEMENT\n");

async function setupCMSArticles() {
  try {
    // 1. V√©rifier la configuration Convex
    console.log("1Ô∏è‚É£ V√©rification de la configuration Convex...");
    
    const envPath = join(process.cwd(), '.env');
    if (!existsSync(envPath)) {
      console.log("‚ùå Fichier .env non trouv√©");
      console.log("üí° Ex√©cutez d'abord : node scripts/setup-convex-url.js");
      return;
    }

    const envContent = require('fs').readFileSync(envPath, 'utf8');
    if (envContent.includes('your-convex-deployment')) {
      console.log("‚ùå URL Convex non configur√©e");
      console.log("üí° Ex√©cutez d'abord : node scripts/setup-convex-url.js");
      return;
    }

    console.log("‚úÖ Configuration Convex OK");

    // 2. V√©rifier si Convex est d√©ploy√©
    console.log("\n2Ô∏è‚É£ V√©rification du d√©ploiement Convex...");
    try {
      execSync('npx convex dev --once', { stdio: 'pipe' });
      console.log("‚úÖ Convex d√©ploy√©");
    } catch (error) {
      console.log("‚ö†Ô∏è  Convex non d√©ploy√© ou erreur de connexion");
      console.log("üí° Ex√©cutez : npx convex dev");
      return;
    }

    // 3. Tester la connexion
    console.log("\n3Ô∏è‚É£ Test de la connexion...");
    try {
      const { testArticlesCMS } = await import('./test-articles-cms.js');
      console.log("‚úÖ Connexion OK");
    } catch (error) {
      console.log("‚ùå Erreur de connexion :", error.message);
      return;
    }

    // 4. Initialiser les articles d'exemple
    console.log("\n4Ô∏è‚É£ Initialisation des articles d'exemple...");
    try {
      const { initSampleArticles } = await import('./init-sample-articles.js');
      console.log("‚úÖ Articles d'exemple cr√©√©s");
    } catch (error) {
      console.log("‚ùå Erreur lors de la cr√©ation des articles :", error.message);
      return;
    }

    // 5. Test final
    console.log("\n5Ô∏è‚É£ Test final du syst√®me...");
    try {
      const { testArticlesCMS } = await import('./test-articles-cms.js');
      console.log("‚úÖ Syst√®me CMS Articles op√©rationnel !");
    } catch (error) {
      console.log("‚ùå Erreur lors du test final :", error.message);
      return;
    }

    console.log("\nüéâ Configuration termin√©e avec succ√®s !");
    console.log("\nüìã Prochaines √©tapes :");
    console.log("   1. Acc√©dez √† /admin/articles pour g√©rer les articles");
    console.log("   2. Visitez /blog pour voir les articles publi√©s");
    console.log("   3. Cr√©ez vos propres articles via l'interface admin");
    console.log("\nüìö Documentation : documentation/CMS-ARTICLES-GUIDE.md");

  } catch (error) {
    console.error("‚ùå Erreur lors de la configuration :", error.message);
    console.log("\nüí° Solutions possibles :");
    console.log("   - V√©rifiez que Convex est install√© : npm install convex");
    console.log("   - V√©rifiez votre URL Convex dans .env");
    console.log("   - D√©ployez Convex : npx convex dev");
    console.log("   - Consultez la documentation : documentation/CMS-ARTICLES-GUIDE.md");
  }
}

setupCMSArticles();
